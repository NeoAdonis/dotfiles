# zsh and oh-my-zsh options
DISABLE_AUTO_TITLE="true"
plugins=(archlinux git rbw zoxide zsh-autosuggestions fast-syntax-highlighting history-substring-search)
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_DUPS
setopt HIST_REDUCE_BLANKS
# End of zsh and oh-my-zsh options

# oh-my-zsh
ZSH=/usr/share/oh-my-zsh
ZSH_CUSTOM=/usr/share/zsh
ZSH_CACHE_DIR="$HOME/.cache/oh-my-zsh"
if [[ ! -d $ZSH_CACHE_DIR ]]; then
	mkdir $ZSH_CACHE_DIR
fi
ZSH_COMPDUMP="$ZSH_CACHE_DIR/.zcompdump"
source $ZSH/oh-my-zsh.sh
# End of oh-my-zsh

# oh-my-posh
if [[ "$TERM" == "linux" ]]; then
	eval "$(oh-my-posh init zsh --config ~/.omp.min.json)"
else
	eval "$(oh-my-posh init zsh --config ~/.omp.json)"
fi
# End of oh-my-posh

# fast-syntax-highlighting
FSH_THEME="catppuccin-mocha"
FSH_THEME_PREFIX="XDG:"
if [[ "$TERM" == "linux" ]]; then
	FSH_THEME="default"
	FSH_THEME_PREFIX=""
fi
if ! fast-theme -s | grep -q "$FSH_THEME"; then
	fast-theme "$FSH_THEME_PREFIX$FSH_THEME"
fi
# End of fast-syntax-highlighting

# fzf
source <(fzf --zsh)
# End of fzf

# fzf yay helpers
# https://github.com/junegunn/fzf/wiki/examples#pacman
yzf() {
	pos=$1
	shift
	sed "s/ /\t/g" |
		fzf --nth=$pos --multi \
			--preview-window=60%,border-left \
			--bind="double-click:execute(xdg-open 'https://archlinux.org/packages/{$pos}'),alt-enter:execute(xdg-open 'https://aur.archlinux.org/packages?K={$pos}&SB=p&SO=d&PP=100')" \
			"$@" | cut -f$pos | xargs
}

yas() {
	if ! command -v yay >/dev/null 2>&1; then
		echo "error: yay is not installed." >&2
		return 1
	fi
	cache_dir="/tmp/yas-$USER"
	test "$1" = "-y" && rm -rf "$cache_dir" && shift
	mkdir -p "$cache_dir"
	preview_cache="$cache_dir/preview_{2}"
	list_cache="$cache_dir/list"
	{ test "$(cat "$list_cache$@" | wc -l)" -lt 50000 && rm "$list_cache$@"; } 2>/dev/null
	pkg=$( (cat "$list_cache$@" 2>/dev/null || {
		pacman -Sl --color always "$@"
		yay -Sl aur --color always "$@"
	} | sed 's/ [^ ]*unknown-version[^ ]*//' | tee "$list_cache$@") | yzf 2 --ansi --tiebreak=index --preview="cat $preview_cache 2>/dev/null | grep -v 'Querying' | grep . || yay --color always -Si {2} | tee $preview_cache")
	if test -n "$pkg"; then
		echo "Installing $pkg..."
		cmd="yay -S $pkg"
		print -s "$cmd"
		eval "$cmd"
		rehash
	fi
}

yar() {
	if ! command -v yay >/dev/null 2>&1; then
		echo "error: yay is not installed." >&2
		return 1
	fi
	pkg=$(yay -Q --color always "$@" | yzf 1 --ansi --tiebreak=length --preview="yay --color always -Qli {1}")
	if test -n "$pkg"; then
		echo "Removing $pkg..."
		cmd="yay -Rcs $pkg"
		print -s "$cmd"
		eval "$cmd"
	fi
}
# End of fzf yay helpers

# yazi
y() {
	if ! command -v yazi >/dev/null 2>&1; then
		echo "error: yazi is not installed." >&2
		return 1
	fi
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	local start end duration count=0
	# work-around: yazi might fail to start when run using SSH on Windows
	while [ "$count" -lt 10 ]; do
		start=$(date +%s%3N)
		yazi "$@" --cwd-file="$tmp" </dev/null
		end=$(date +%s%3N)
		duration=$((end - start))
		count=$((count + 1))
		# run again unless it runs for at least a short while
		if [ "$duration" -ge 1000 ]; then
			break
		fi
	done
	IFS= read -r -d '' cwd <"$tmp"
	[ -n "$cwd" ] && [ "$cwd" != "$PWD" ] && builtin cd -- "$cwd"
	rm -f -- "$tmp"
}
# End of yazi

# Aliases
alias cls=clear
alias ls=lsd
alias lt="lsd --tree"
alias pip="uv pip"
# End of Aliases
